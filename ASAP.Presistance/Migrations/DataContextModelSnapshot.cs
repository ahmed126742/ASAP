// <auto-generated />
using System;
using ASAP.Presistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASAP.Presistance.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ASAP.Domain.Entities.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AttachmentHeaderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("longtext");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentHeaderId");

                    b.ToTable("Attachments", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.AttachmentHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AttachmentHeaders", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ContractorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PostCode")
                        .HasColumnType("longtext");

                    b.Property<string>("SiteAgent")
                        .HasColumnType("longtext");

                    b.Property<string>("TLO_Mobile")
                        .HasColumnType("longtext");

                    b.Property<string>("TLO_Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.ToTable("Contracts", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.ContractItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int?>("Ancils")
                        .HasColumnType("int");

                    b.Property<int?>("Ancils_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("Ancils_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Bifolds")
                        .HasColumnType("int");

                    b.Property<int?>("Bifolds_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("Bifolds_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("CertesNo")
                        .HasColumnType("int");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("FD")
                        .HasColumnType("int");

                    b.Property<int?>("FED")
                        .HasColumnType("int");

                    b.Property<int?>("FED_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("FED_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("FitterId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Frame")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GlassDeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GlassStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InstallationDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("InstallationDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int?>("PD")
                        .HasColumnType("int");

                    b.Property<int?>("PD_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("PD_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("PanelDeliveryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PanelStatus")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("ProductionWeek")
                        .HasColumnType("int");

                    b.Property<int?>("RD")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("RequirementContractTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Roofs")
                        .HasColumnType("int");

                    b.Property<int?>("Roofs_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("Roofs_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SurveyDateFrom")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("SurveyDateTo")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("SurveyorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("VS")
                        .HasColumnType("int");

                    b.Property<int?>("VS_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("VS_SupplierId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("W")
                        .HasColumnType("int");

                    b.Property<int?>("W_RD_FD_Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("W_RD_FD_SupplierId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("contractItems", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Contractor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Contractors", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Fitting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool?>("AllFixingsCorrectlyCarriedOut")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("AllFramesSquarLevelPlumb")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("AttachementHeaderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ContractItemId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("InternalAndExternalMakingGoodComplete")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IstallerName")
                        .HasColumnType("longtext");

                    b.Property<bool?>("PhotosTaken")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PropertyCleanedOfDebrisAndDust")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("SaftyGlassInstallCorrectly")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("WindowDoorFramesAndGlassCleaned")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId");

                    b.ToTable("Fittings", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.ServiceCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AttachementHeaderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ContractItemId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerName")
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsCustomerHappy")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PartsRequired")
                        .HasColumnType("longtext");

                    b.Property<string>("ReportedIssue")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("WasEngineerOnTime")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("WorkDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("WorkQualityRate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId");

                    b.HasIndex("UserId");

                    b.ToTable("ServiceCalls", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Sorted")
                        .HasColumnType("int");

                    b.Property<int>("SupplierTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Survey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AttachmentHeaderId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Cill")
                        .HasColumnType("int");

                    b.Property<Guid?>("ContractItemId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Extras")
                        .HasColumnType("longtext");

                    b.Property<string>("Glass")
                        .HasColumnType("longtext");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<int?>("Horns")
                        .HasColumnType("int");

                    b.Property<int?>("IntlHeight")
                        .HasColumnType("int");

                    b.Property<int?>("IntlWidth")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractItemId");

                    b.ToTable("Surveys", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Attachment", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.AttachmentHeader", "AttachmentHeader")
                        .WithMany()
                        .HasForeignKey("AttachmentHeaderId");

                    b.Navigation("AttachmentHeader");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Contract", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.Contractor", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorId");

                    b.Navigation("Contractor");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.ContractItem", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.Contract", "Contract")
                        .WithMany("contractItems")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Fitting", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.ContractItem", "ContractItem")
                        .WithMany()
                        .HasForeignKey("ContractItemId");

                    b.Navigation("ContractItem");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.ServiceCall", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.ContractItem", "ContractItem")
                        .WithMany()
                        .HasForeignKey("ContractItemId");

                    b.HasOne("ASAP.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ContractItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Survey", b =>
                {
                    b.HasOne("ASAP.Domain.Entities.ContractItem", "ContractItem")
                        .WithMany()
                        .HasForeignKey("ContractItemId");

                    b.Navigation("ContractItem");
                });

            modelBuilder.Entity("ASAP.Domain.Entities.Contract", b =>
                {
                    b.Navigation("contractItems");
                });
#pragma warning restore 612, 618
        }
    }
}
